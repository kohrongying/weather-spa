{"version":3,"sources":["webpack:///./src/react/api/api.js","webpack:///./src/react/components/PSI/PSI.js","webpack:///./src/react/components/WeatherDetail/WeatherDetail.js","webpack:///./src/react/root.component.js","webpack:///./src/react/main.app.js","webpack:///./src/react/App.css?7e11","webpack:///./src/react/App.css","webpack:///./src/react/components/PSI/PSI.css?90d0","webpack:///./src/react/components/PSI/PSI.css","webpack:///./src/react/components/WeatherDetail/WeatherDetail.css?9d35","webpack:///./src/react/components/WeatherDetail/WeatherDetail.css"],"names":["baseURL","WeatherApi","getTemperature","a","axios","get","response","data","getRainfall","getHumidity","getPSI","INDICATOR","minVal","maxVal","descriptor","color","PSI","React","useState","setData","qualityIndex","setQualityIndex","useEffect","fetchData","items","renderQuality","readings","psi_twenty_four_hourly","national","reading","i","length","Fragment","className","style","backgroundColor","Date","timestamp","toLocaleString","href","TEMPERATURE_TABLE","RAINFALL_TABLE","WeatherDetail","temperature","rainfall","humidity","stationId","stations","handleSelectChange","item","getTempDescriptor","getRainfallDescriptor","name","id","onChange","value","map","station","key","propTypes","PropTypes","number","string","array","func","App","setStations","temps","setTemps","setRainfall","setHumidity","setStationId","Promise","all","responses","metadata","sort","b","find","obj","station_id","event","target","reactLifecycles","singleSpaReact","ReactDOM","rootComponent","Home","domElementGetter","document","getElementById","bootstrap","mount","unmount","api","content","__esModule","default","module","options","exports","locals","___CSS_LOADER_API_IMPORT___","push"],"mappings":"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","file":"2.js","sourcesContent":["import axios from \"axios\"\n\nconst baseURL = \"https://api.data.gov.sg/v1/environment\"\n\nconst WeatherApi = {\n    getTemperature: async () => {\n        const response = await axios.get(`${baseURL}/air-temperature`)\n        return response.data\n    },\n\n    getRainfall: async () => {\n        const response = await axios.get(`${baseURL}/rainfall`)\n        return response.data\n    },\n\n    getHumidity: async () => {\n        const response = await axios.get(`${baseURL}/relative-humidity`)\n        return response.data\n    },\n    \n    getPSI: async () => {\n        const response = await axios.get(`${baseURL}/psi`)\n        return response.data\n    },\n}\n\nexport default WeatherApi","import React from \"react\"\nimport WeatherApi from \"../../api/api\"\nimport \"./PSI.css\"\n\nconst INDICATOR = [\n    { minVal: 0, maxVal: 50, descriptor: \"Good\", color: \"#6FCF97\"},\n    { minVal: 51, maxVal: 100, descriptor: \"Moderate\", color: \"#56CCF2\"},\n    { minVal: 101, maxVal: 200, descriptor: \"Unhealthy\", color: \"#F2C94C\"},\n    { minVal: 201, maxVal: 300, descriptor: \"Very unhealthy\", color: \"#F2994A\"},\n    { minVal: 300, maxVal: null, descriptor: \"Hazardous\", color: \"#EB5757\"},\n]\n\nconst PSI = () => {\n    const [data, setData] = React.useState(null)\n    const [qualityIndex, setQualityIndex] = React.useState(0)\n\n    React.useEffect(() => {\n        fetchData()\n    }, [])\n\n    const fetchData = async () => {\n        const response = await WeatherApi.getPSI()\n        const data = response.items[0]\n        setData(data)\n        renderQuality(data.readings.psi_twenty_four_hourly.national)\n    }\n\n    const renderQuality = (reading) => {\n        if (reading) {\n            for(let i=0; i< INDICATOR.length;i++) {\n                if (reading > INDICATOR[i].minVal && reading < INDICATOR[i].maxVal) {\n                    setQualityIndex(i)\n                    return\n                }\n            }\n        }\n        setQualityIndex(4)\n    }\n\n    return(\n        <React.Fragment>\n            <div className=\"psi container\" style={{ backgroundColor: INDICATOR[qualityIndex].color}}>\n        \n                <div className=\"two-columns\">\n                    <h2>The PSI is {INDICATOR[qualityIndex].descriptor}</h2>\n                    <div className=\"reading\">{data?.readings.psi_twenty_four_hourly.national}</div>\n                </div>\n        \n                <div className=\"footnote\">\n                    <div><i>Retrieved on {new Date(data?.timestamp).toLocaleString()}</i></div>\n                    <a href=\"/psi\">View more</a>\n                </div>\n        \n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default PSI","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./WeatherDetail.css\"\n\nconst TEMPERATURE_TABLE = [\n    { maxVal: 27, descriptor: \"cool\" },\n    { maxVal: 31, descriptor: \"warm\" },\n    { maxVal: 34, descriptor: \"hot\" },\n    { maxVal: 36, descriptor: \"sibeh hot\" },\n]\n\nconst RAINFALL_TABLE = [\n    { maxVal: 0, descriptor: \"no rain\" },\n    { maxVal: 0.5, descriptor: \"slight drizzle\" },\n    { maxVal: 2, descriptor: \"light showers\" },\n    { maxVal: 100, descriptor: \"heavy rain\" },\n]\n\nconst getTempDescriptor = (temperature) => {\n    for (let item of TEMPERATURE_TABLE) {\n        if (item.maxVal >= temperature) {\n            return item.descriptor\n        }\n    }\n}\n\nconst getRainfallDescriptor = (rainfall) => {\n    for (let item of RAINFALL_TABLE) {\n        if (item.maxVal >= rainfall) {\n            return item.descriptor\n        }\n    }\n}\n\n\nconst WeatherDetail = ({\n    temperature,\n    rainfall,\n    humidity,\n    timestamp,\n    stationId,\n    stations,\n    handleSelectChange\n}) => {\n    return (\n        <React.Fragment>\n            <div className=\"weather-detail container\" style={{ backgroundColor: \"#56CCF2\"}}>\n      \n                <div className=\"two-columns\">\n                    <h2>\n                        It is {getTempDescriptor(temperature)} with {getRainfallDescriptor(rainfall)} at <br></br>\n                        <select name=\"stations\" id=\"stations\" onChange={handleSelectChange} value={stationId}>\n                            {stations.map(station => (\n                                <option key={station.id} value={station.id}>{station.name}</option>\n                            ))}\n                        </select>\n                    </h2>\n                    \n                    <div className=\"reading\">\n                        <div>{temperature} °C</div>\n                        <div>{rainfall} mm</div>\n                        <div>H: {humidity} %</div>\n                    </div>\n                </div>\n      \n                <div className=\"footnote\">\n                    <div><i>Retrieved on {new Date(timestamp).toLocaleString()}</i></div>\n                </div>\n      \n            </div>\n        </React.Fragment>\n    )\n}\n\nWeatherDetail.propTypes = {\n    temperature: PropTypes.number,\n    rainfall: PropTypes.number,\n    humidity: PropTypes.number,\n    timestamp: PropTypes.string,\n    stationId: PropTypes.string,\n    stations: PropTypes.array,\n    handleSelectChange: PropTypes.func\n}\n\nexport default WeatherDetail","import React from \"react\"\nimport WeatherApi from \"./api/api\"\nimport \"./App.css\"\nimport PSI from \"./components/PSI/PSI\"\nimport WeatherDetail from \"./components/WeatherDetail/WeatherDetail\"\n\nconst App = () => {\n    const [stations, setStations] = React.useState([])\n    const [temps, setTemps] = React.useState({})\n    const [rainfall, setRainfall] = React.useState({})\n    const [humidity, setHumidity] = React.useState({})\n    const [stationId, setStationId] = React.useState(null)\n\n    React.useEffect(() => {\n        fetchData()    \n    }, [])\n\n    const fetchData = async () => {\n        const responses = await Promise.all([\n            WeatherApi.getTemperature(),\n            WeatherApi.getRainfall(),\n            WeatherApi.getHumidity()\n        ])\n\n        // let stations = []\n        // for (let i=0;i<responses.length;i++) {\n        //   stations = [...stations, ...responses[i].metadata.stations]\n        // }\n        // const removedDups = new Set(stations.map(station => station.id))\n        // stations = [...removedDups].map(id => stations.find(s => s.id === id)).filter(station => station.id !== station.name)\n        \n        const stations = responses[0].metadata.stations\n        stations.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0)) \n\n        setStations(stations)\n        setTemps(responses[0].items[0])\n        setRainfall(responses[1].items[0])\n        setHumidity(responses[2].items[0])\n        setStationId(stations[0].id)\n    }\n\n    const handleSelectChange = (event) => {\n        setStationId(event.target.value)\n    }\n\n    return(\n        <>\n            <div id=\"weather-container\">\n        \n                {stationId && \n          <WeatherDetail\n              stations={stations}\n              temperature={temps?.readings?.find(obj => obj.station_id === stationId)?.value}\n              rainfall={rainfall?.readings?.find(obj => obj.station_id === stationId)?.value}\n              humidity={humidity?.readings?.find(obj => obj.station_id === stationId)?.value}\n              timestamp={temps.timestamp}\n              stationId={stationId}\n              handleSelectChange={handleSelectChange}\n          />\n                }\n            </div>\n            <div id=\"psi-container\">\n                <PSI />\n            </div>\n\n      \n            \n        </>\n    )\n\n}\n\nexport default App","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport singleSpaReact from \"single-spa-react\"\nimport Home from \"./root.component.js\"\n\nfunction domElementGetter() {\n    return document.getElementById(\"react\")\n}\n\nconst reactLifecycles = singleSpaReact({\n    React,\n    ReactDOM,\n    rootComponent: Home,\n    domElementGetter,\n})\n\nexport const bootstrap = [\n    reactLifecycles.bootstrap,\n]\n\nexport const mount = [\n    reactLifecycles.mount,\n]\n\nexport const unmount = [\n    reactLifecycles.unmount,\n]","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"body {\\n    margin: 0;\\n}\\n.container {\\n    padding: 20px 300px;\\n    background-color: #ececec;\\n    height: 100%;\\n    \\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n\\n}\\n#weather-container {\\n    height: 60vh;\\n}\\n\\n#psi-container{\\n    height: 40vh;\\n}\\n\\n@media only screen and (max-width: 700px) {\\n    .container {\\n        padding: 20px;\\n    }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./PSI.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".two-columns {\\n    margin-top: 50px;\\n    margin-bottom: 30px;\\n    display: flex;\\n}\\n\\n.psi h2 {\\n    margin: 0;\\n    font-weight: 800;\\n    font-size: 60px;\\n    line-height: 1;\\n    flex: 1;\\n}\\n\\n.reading {\\n    flex: 1;\\n    font-size: 60px;\\n    text-align: right;\\n    line-height: 50px;\\n}\\n\\n.footnote {\\n    text-align: right;\\n}\\n\\n@media only screen and (max-width: 700px) {\\n    .psi h2 {\\n        font-size: 40px;\\n    }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var api = require(\"!../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!./WeatherDetail.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n.weather-detail h2 {\\n    margin: 0;\\n    font-weight: 800;\\n    font-size: 50px;\\n    line-height: 1;\\n    flex: 2;\\n    max-width: 70%;\\n}\\n\\n.weather-detail .reading div {\\n    font-size: 20px;\\n    line-height: 1;\\n}\\n\\nselect#stations {\\n    background: none;\\n    border: none;\\n    font-family: \\\"Muli\\\";\\n    font-weight: 800;\\n    font-size: 40px;\\n    max-width: 100%;\\n    overflow: hidden;\\n    /* white-space: pre; */\\n    text-overflow: ellipsis;\\n    /* -webkit-appearance: none; */\\n    border-bottom: 1px solid black;\\n}\\n\\n\\n@media only screen and (max-width: 700px) {\\n    .weather-detail h2 {\\n        font-size: 40px;\\n    }\\n\\n    select#stations {\\n        font-size: 30px;\\n    }\\n}\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}